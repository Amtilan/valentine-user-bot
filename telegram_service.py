from dataclasses import dataclass
from typing import Optional
from telethon import TelegramClient
from os import getenv
from dotenv import load_dotenv

load_dotenv()


@dataclass
class TelegramConfig:
    api_id: str = getenv('API_ID')
    api_hash: str = getenv('API_HASH')
    bot_token: str = None 
    session_name: str = "default_session"


class TelegramService:
    def __init__(self, config: TelegramConfig):
        self.config = config
        self.client: TelegramClient = None
    async def start(self):
        if self.config.bot_token:
            self.client = await TelegramClient(
                self.config.session_name,
                self.config.api_id,
                self.config.api_hash,
                
            ).start(bot_token=self.config.bot_token)
        else:
            self.client = await TelegramClient(
                self.config.session_name,
                self.config.api_id,
                self.config.api_hash
            ).start()

    async def send_message(self, recipient: str, message: str):
        try:
            await self.client.send_message(recipient, message)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    async def send_file_or_msg(
        self,
        username: str,
        message: str,
        photo_path: Optional[str] = None  
    ):
        try:
            await self.start()
            
            # –ö—Ä–∞—Å–∏–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏
            decorated_message = (
                "üíå –í–∞–º –ø—Ä–∏—à–ª–∞ –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞ ! ‚ù§Ô∏è‚ú®\n"
                "üíï –í–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞ üíï\n"
                f"{message}\n"
                "–•–æ—á–µ—à—å —Ä–∞–¥–æ–≤–∞—Ç—å –∏ —É–¥–∏–≤–ª—è—Ç—å –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ ?"
                "üíñ –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç —Å–∞–π—Ç, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ä–∏—Ç—å –∫–∞–ø–µ–ª—å–∫—É –º–∞–≥–∏–∏ –∏ —Ä–æ–º–∞–Ω—Ç–∏–∫–∏."
                "https://v0-valentine-9gik5e.vercel.app/"
            )
            
            if photo_path:
                await self.client.send_file(username, photo_path, caption=decorated_message)
                print(f"–§–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç—É —Å —é–∑–µ—Ä —Ç–µ–≥–æ–º: {username}")
            else:
                await self.client.send_message(username, decorated_message)
                print(f"–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç—É —Å —é–∑–µ—Ä —Ç–µ–≥–æ–º: {username}")
        
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º: {e}")
        
        finally:
            await self.client.disconnect()
